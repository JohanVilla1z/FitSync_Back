# ==========================================
# Overrides para el Perfil de Producción ('prod')
# ==========================================

# ==========================================
# Configuración de Logging (Producción)
# ==========================================
# Menos verboso en producción
logging.level.root=INFO
# INFO para ver flujo general, cambiar a DEBUG si se necesita investigar un problema específico
logging.level.com.johan.gym_control=INFO
logging.level.org.springframework.web=INFO
# No mostrar SQL ni parámetros en producción por defecto (seguridad y rendimiento)
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql=WARN
# Usar el patrón de log definido en application.properties

# ==========================================
# Configuración Base de Datos (Producción - HikariCP)
# ==========================================
# Las credenciales (URL, user, password) se toman de las variables de entorno
# definidas en application.properties (MYSQLHOST, MYSQLPORT, etc.)

# Configuración HikariCP Optimizada para Producción (Railway 500MB RAM)
spring.datasource.hikari.poolName=HikariPool-Prod
# Aumentar timeout de inicialización CRÍTICO!
spring.datasource.hikari.initializationFailTimeout=60000
# Reducir tamaño del pool para poca memoria
spring.datasource.hikari.maximumPoolSize=5
spring.datasource.hikari.minimumIdle=2
# Timeout de conexión general (puede ser un poco más alto)
spring.datasource.hikari.connectionTimeout=45000
# Tiempos de idle/lifetime (los defaults de Hikari o los de application.properties suelen estar bien)
# spring.datasource.hikari.idleTimeout=600000 # 10 min (default Hikari)
# spring.datasource.hikari.maxLifetime=1800000 # 30 min (default Hikari)

# Conexion temporal directo a MySQL (no recomendado para producción)
spring.datasource.url=jdbc:mysql://root:iWbaCQmvZevubeMjXeAmMTlcidGfWLSP@crossover.proxy.rlwy.net:16012/railway?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=iWbaCQmvZevubeMjXeAmMTlcidGfWLSP
# ==========================================
# Configuración JPA / Hibernate (Producción)
# ==========================================
# 'validate': verifica que el esquema de la BD coincida con las entidades al inicio.
# 'none': no hace nada con el esquema (recomendado si usas herramientas de migración como Flyway/Liquibase).
spring.jpa.hibernate.ddl-auto=validate
# No mostrar SQL en producción
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# --- HABILITAR CACHÉ L2 ---
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.use_query_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.jcache.JCacheRegionFactory
spring.jpa.properties.hibernate.javax.cache.provider=org.ehcache.jsr107.EhcacheCachingProvider
spring.jpa.properties.hibernate.javax.cache.uri=classpath:ehcache.xml

# Optimizaciones de rendimiento (mantener si funcionan bien)
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.batch_versioned_data=true

# Deshabilitar inicialización SQL en producción (schema.sql, data.sql)
spring.sql.init.mode=never

# ==========================================
# Configuración de Seguridad (Producción)
# ==========================================
# Asegurar cookies de sesión (importante si se usaran)
server.servlet.session.cookie.secure=true
# Strict es más seguro para prod
server.servlet.session.cookie.same-site=Strict

# Configuración de cabeceras Forwarded para proxies inversos (Railway/Render)
# NATIVE usa cabeceras X-Forwarded-* estándar
server.forward-headers-strategy=NATIVE
server.tomcat.remoteip.remote-ip-header=x-forwarded-for
server.tomcat.remoteip.protocol-header=x-forwarded-proto

# ==========================================
# Configuración CORS (Producción)
# ==========================================
# El origen permitido se toma de la variable de entorno ALLOWED_ORIGINS
# spring.mvc.cors.allowed-origins=${ALLOWED_ORIGINS} # Ya definido en application.properties
# Ser más específico que '*' en producción
spring.mvc.cors.allowed-headers=Authorization,Content-Type,X-Requested-With,Accept,Origin
# 1 hora para caché de preflight
spring.mvc.cors.max-age=3600

# ==========================================
# Configuración OpenAPI/Swagger (Deshabilitado en Prod)
# ==========================================
# Deshabilitado por defecto, puede habilitarse con variables de entorno si es necesario
springdoc.api-docs.enabled=${ENABLE_API_DOCS:false}
springdoc.swagger-ui.enabled=${ENABLE_SWAGGER_UI:false}

# --- FIN application-prod.properties ---