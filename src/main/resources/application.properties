# Configuración básica de la aplicación
spring.application.name=GymControl

# Configuración de la base de datos con múltiples opciones de respaldo
# 1. Usar JDBC_DATABASE_URL si está configurado (para compatibilidad con Render)
# 2. Construir URL a partir de MYSQL_URL de Railway (formato mysql://user:pass@host:port/db)
# 3. Construir URL a partir de variables individuales de Railway (MYSQLHOST, etc.)
# 4. Usar valores locales predeterminados para desarrollo
spring.datasource.url=${JDBC_DATABASE_URL:jdbc:${MYSQL_URL:mysql://${MYSQLUSER:root}:${MYSQLPASSWORD:1234}@${MYSQLHOST:localhost}:${MYSQLPORT:3306}/${MYSQLDATABASE:gym_control}}?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&useLegacyDatetimeCode=false&serverTimezone=UTC}
spring.datasource.username=${JDBC_DATABASE_USERNAME:${MYSQLUSER:root}}
spring.datasource.password=${JDBC_DATABASE_PASSWORD:${MYSQLPASSWORD:1234}}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Configuración para mantener conexiones activas y evitar "connection closed" en Railway
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=12
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.auto-commit=true

# Configuración del puerto (importante para Heroku/Render)
server.port=${PORT:8080}

# Configuración de JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=${SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=${FORMAT_SQL:true}
spring.jpa.open-in-view=false

# Propiedades de conexión adicionales para producción
spring.datasource.hikari.maximum-pool-size=${DB_MAX_POOL_SIZE:10}
spring.datasource.hikari.minimum-idle=${DB_MIN_IDLE:5}
spring.datasource.hikari.connection-timeout=${DB_CONN_TIMEOUT:30000}

# Configuración de JWT (usa variables de entorno para mayor seguridad)
jwt.secret=${JWT_SECRET:wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY}
jwt.expiration=${JWT_EXPIRATION:86400000}

# Configuración de CORS para permitir peticiones desde el frontend
# Permite múltiples orígenes separados por comas
spring.mvc.cors.allowed-origins=${ALLOWED_ORIGINS:http://localhost:5173,https://fitsync.netlify.app}
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=*
spring.mvc.cors.exposed-headers=Authorization
spring.mvc.cors.allow-credentials=true
spring.mvc.cors.max-age=3600

# Configuración para DataSeeder
seed.admin.email=${SEED_ADMIN_EMAIL:admin@fitsync.com}
seed.admin.password=${SEED_ADMIN_PASSWORD:Admin123!}
seed.trainer.email=${SEED_TRAINER_EMAIL:trainer@fitsync.com}
seed.trainer.password=${SEED_TRAINER_PASSWORD:Trainer123!}
seed.user.email=${SEED_USER_EMAIL:user@fitsync.com}
seed.user.password=${SEED_USER_PASSWORD:User123!}
spring.profiles.active=${ACTIVE_PROFILE:default}

# Configuración de seguridad adicional
server.servlet.session.cookie.secure=${SECURE_COOKIE:false}
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict

# Configuración de SpringDoc OpenAPI
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.api-docs.enabled=${ENABLE_API_DOCS:true}
springdoc.swagger-ui.enabled=${ENABLE_SWAGGER_UI:true}
springdoc.packages-to-scan=com.johan.gym_control.controllers
springdoc.pathsToMatch=/api/**
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.version=3.0.0
springdoc.writer-with-order-by-keys=true
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.csrf.enabled=false

# Solución al problema de la versión OpenAPI
springdoc.api-docs.version=OPENAPI_3_0