# ==========================================
# Configuración General de la Aplicación
# ==========================================
spring.application.name=GymControl

# Perfil activo por defecto (puede ser sobreescrito por variable de entorno SPRING_PROFILES_ACTIVE)
spring.profiles.active=${ACTIVE_PROFILE:default}

# Puerto del servidor (Railway/Render usan PORT, 8080 es default local)
server.port=${PORT:8080}
# Escuchar en todas las interfaces
server.address=0.0.0.0

# ==========================================
# Configuración de Logging (Defaults para Dev)
# ==========================================
logging.level.root=INFO
# Más detalle en nuestro código para dev
logging.level.com.johan.gym_control=DEBUG
logging.level.org.springframework.web=INFO
# Ver SQL generado por Hibernate en dev
logging.level.org.hibernate.SQL=DEBUG
# Ver parámetros bindados en las consultas SQL (muy verboso)
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# Formato de log para la consola
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %clr(%-5level) %clr(${PID:- }){magenta} --- [%15.15t] %clr(%-40.40logger{39}){cyan} : %m%n

# ==========================================
# Configuración Base de Datos (Defaults para Dev Local)
# ==========================================
# URL (Usa variables de entorno si existen, sino defaults locales)
spring.datasource.url=jdbc:mysql://${MYSQLHOST:localhost}:${MYSQLPORT:3306}/${MYSQLDATABASE:gym_control}?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
# Usuario (Usa variable de entorno si existe, sino 'root')
spring.datasource.username=${MYSQLUSER:root}
# Contraseña (Usa variable de entorno si existe, sino '1234')
# ¡CAMBIAR '1234' POR TU CONTRASEÑA LOCAL REAL SI ES DIFERENTE!
spring.datasource.password=${MYSQLPASSWORD:1234}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Configuración HikariCP (Defaults para Dev Local - más relajados)
spring.datasource.hikari.poolName=HikariPool-Dev
spring.datasource.hikari.maximumPoolSize=10
spring.datasource.hikari.minimumIdle=2
spring.datasource.hikari.connectionTimeout=30000 # 30 segundos
spring.datasource.hikari.idleTimeout=300000 # 5 minutos
spring.datasource.hikari.maxLifetime=1200000 # 20 minutos
# Timeout de inicialización (más permisivo para dev)
spring.datasource.hikari.initializationFailTimeout=60000 # 60 segundos

# ==========================================
# Configuración JPA / Hibernate (Defaults para Dev)
# ==========================================
# Dejar que Hibernate detecte el dialecto automáticamente
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# 'update' es conveniente para desarrollo, crea/actualiza el esquema automáticamente
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# Deshabilitar Open Session In View es buena práctica general para evitar N+1
spring.jpa.open-in-view=false

# Deshabilitar caché L2 por defecto en dev (simplifica debugging)
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false

# ==========================================
# Configuración de Seguridad y JWT (Defaults)
# ==========================================
# Secreto JWT (Usar variable de entorno JWT_SECRET en prod!)
jwt.secret=${JWT_SECRET:wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY_CHANGE_IN_PROD}
# Expiración JWT (1 día por defecto = 86400000 ms)
jwt.expiration=${JWT_EXPIRATION:86400000}

# Configuración de cookies de sesión (aunque JWT es stateless, por si acaso)
# false para http local
server.servlet.session.cookie.secure=false
server.servlet.session.cookie.http-only=true
# Lax es más flexible para dev
server.servlet.session.cookie.same-site=Lax

# Cabeceras Forwarded (útil si hay proxy inverso local)
server.forward-headers-strategy=framework

# ==========================================
# Configuración CORS (Default para Dev Local)
# ==========================================
# Orígenes permitidos (Usar variable de entorno ALLOWED_ORIGINS en prod!)
spring.mvc.cors.allowed-origins=${ALLOWED_ORIGINS:http://localhost:5173}
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
# '*' es permisivo para dev
spring.mvc.cors.allowed-headers=*
spring.mvc.cors.exposed-headers=Authorization,Content-Disposition
spring.mvc.cors.allow-credentials=true
# 30 minutos para dev
spring.mvc.cors.max-age=1800

# ==========================================
# Configuración DataSeeder (Defaults)
# ==========================================
seed.admin.email=${SEED_ADMIN_EMAIL:admin@fitsync.com}
seed.admin.password=${SEED_ADMIN_PASSWORD:Admin123!}
seed.trainer.email=${SEED_TRAINER_EMAIL:trainer@fitsync.com}
seed.trainer.password=${SEED_TRAINER_PASSWORD:Trainer123!}
seed.user.email=${SEED_USER_EMAIL:user@fitsync.com}
seed.user.password=${SEED_USER_PASSWORD:User123!}
# El seeder se activa basado en el perfil 'prod' o la variable FORCE_SEED_DATA=true

# ==========================================
# Configuración OpenAPI/Swagger (Habilitado para Dev)
# ==========================================
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.packages-to-scan=com.johan.gym_control.controllers
springdoc.pathsToMatch=/api/**

# ==========================================
# Configuración Resilience4j (Rate Limiting)
# ==========================================
# Mantener la configuración existente si es necesaria
resilience4j.ratelimiter.instances.api.limit-for-period=100
resilience4j.ratelimiter.instances.api.limit-refresh-period=1m
resilience4j.ratelimiter.instances.api.timeout-duration=0
resilience4j.ratelimiter.instances.authapi.limit-for-period=20
resilience4j.ratelimiter.instances.authapi.limit-refresh-period=1m
resilience4j.ratelimiter.instances.authapi.timeout-duration=0

# --- FIN application.properties ---