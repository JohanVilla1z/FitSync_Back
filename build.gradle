plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3' // Versión estable actual
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.johan'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

configurations.all {
    resolutionStrategy {
        // Forzar versiones específicas para evitar conflictos
        force 'org.springframework:spring-core:6.1.4'
        force 'org.springframework:spring-context:6.1.4'
    }
}

dependencies {
    // Spring Boot starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    
    // Documentación OpenAPI/Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    
    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'
    
    // Base de datos
    runtimeOnly 'com.mysql:mysql-connector-j'
    
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Definir los atributos antes de resolver o consumir las configuraciones
configurations {
    implementation {
        attributes.attribute(Attribute.of('org.gradle.dependency.bundling', String), 'external')
    }
    runtimeOnly {
        attributes.attribute(Attribute.of('org.gradle.dependency.bundling', String), 'external')
    }
}

// Para evitar errores con el comportamiento incubating de problema-reporting
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs += ['-parameters']
    // Añadir warning para APIs depreciadas
    options.deprecation = true
}

tasks.named('test') {
    useJUnitPlatform()
}